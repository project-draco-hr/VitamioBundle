{
  String key=null;
  byte[] value=null;
  mEncoding=encoding;
  for (  byte[] keyBytes : meta.keySet()) {
    try {
      key=new String(keyBytes,mEncoding).trim().toLowerCase(Locale.US);
    }
 catch (    UnsupportedEncodingException e) {
      key=new String(keyBytes).trim().toLowerCase(Locale.US);
    }
    value=meta.get(keyBytes);
    if (key.equals("title")) {
      mMeta.put(TITLE,value);
    }
 else     if (key.equals("comment")) {
      mMeta.put(COMMENT,value);
    }
 else     if (key.equals("copyright")) {
      mMeta.put(COPYRIGHT,value);
    }
 else     if (key.equals("album")) {
      mMeta.put(ALBUM,value);
    }
 else     if (key.equals("artist")) {
      mMeta.put(ARTIST,value);
    }
 else     if (key.equals("author")) {
      mMeta.put(AUTHOR,value);
    }
 else     if (key.equals("composer")) {
      mMeta.put(COMPOSER,value);
    }
 else     if (key.equals("genre")) {
      mMeta.put(GENRE,value);
    }
 else     if (key.equals("creation_time") || key.equals("date")) {
      mMeta.put(DATE,value);
    }
 else     if (key.equals("duration")) {
      mMeta.put(DURATION,value);
    }
 else     if (key.equals("length")) {
      mMeta.put(LENGTH,value);
    }
 else     if (key.equals("bit_rate")) {
      mMeta.put(BIT_RATE,value);
    }
 else     if (key.equals("audio_bit_rate")) {
      mMeta.put(AUDIO_BIT_RATE,value);
    }
 else     if (key.equals("video_bit_rate")) {
      mMeta.put(VIDEO_BIT_RATE,value);
    }
 else     if (key.equals("audio_sample_rate")) {
      mMeta.put(AUDIO_SAMPLE_RATE,value);
    }
 else     if (key.equals("video_frame_rate")) {
      mMeta.put(VIDEO_FRAME_RATE,value);
    }
 else     if (key.equals("format")) {
      mMeta.put(MIME_TYPE,value);
    }
 else     if (key.equals("audio_codec")) {
      mMeta.put(AUDIO_CODEC,value);
    }
 else     if (key.equals("video_codec")) {
      mMeta.put(VIDEO_CODEC,value);
    }
 else     if (key.equals("video_height")) {
      mMeta.put(VIDEO_HEIGHT,value);
    }
 else     if (key.equals("video_width")) {
      mMeta.put(VIDEO_WIDTH,value);
    }
 else     if (key.equals("num_tracks")) {
      mMeta.put(NUM_TRACKS,value);
    }
 else     if (key.equals("cap_pause")) {
      mMeta.put(PAUSE_AVAILABLE,value);
    }
 else     if (key.equals("cap_seek")) {
      mMeta.put(SEEK_AVAILABLE,value);
    }
  }
  if (BuildConfig.DEBUG) {
    android.util.Log.i("Vitamio[Metadata]","title:\t\t" + getString(TITLE));
    android.util.Log.i("Vitamio[Metadata]","comment:\t\t" + getString(COMMENT));
    android.util.Log.i("Vitamio[Metadata]","copyright:\t\t" + getString(COPYRIGHT));
    android.util.Log.i("Vitamio[Metadata]","album:\t\t" + getString(ALBUM));
    android.util.Log.i("Vitamio[Metadata]","artist:\t\t" + getString(ARTIST));
    android.util.Log.i("Vitamio[Metadata]","composer:\t\t" + getString(COMPOSER));
    android.util.Log.i("Vitamio[Metadata]","genre:\t\t" + getString(GENRE));
    android.util.Log.i("Vitamio[Metadata]","date:\t\t" + getString(DATE));
    android.util.Log.i("Vitamio[Metadata]","duration:\t\t" + getLong(DURATION));
    android.util.Log.i("Vitamio[Metadata]","length:\t\t" + getLong(LENGTH));
    android.util.Log.i("Vitamio[Metadata]","bit_rate:\t\t" + getInt(BIT_RATE));
    android.util.Log.i("Vitamio[Metadata]","audio_bit_rate:\t" + getInt(AUDIO_BIT_RATE));
    android.util.Log.i("Vitamio[Metadata]","video_bit_rate:\t" + getInt(VIDEO_BIT_RATE));
    android.util.Log.i("Vitamio[Metadata]","audio_sample_rate:\t" + getInt(AUDIO_SAMPLE_RATE));
    android.util.Log.i("Vitamio[Metadata]","video_frame_rate:\t" + getDouble(VIDEO_FRAME_RATE));
    android.util.Log.i("Vitamio[Metadata]","format:\t\t" + getString(MIME_TYPE));
    android.util.Log.i("Vitamio[Metadata]","audio_codec:\t" + getString(AUDIO_CODEC));
    android.util.Log.i("Vitamio[Metadata]","video_codec:\t" + getString(VIDEO_CODEC));
    android.util.Log.i("Vitamio[Metadata]","video_height:\t" + getInt(VIDEO_HEIGHT));
    android.util.Log.i("Vitamio[Metadata]","video_width:\t" + getInt(VIDEO_WIDTH));
    android.util.Log.i("Vitamio[Metadata]","num_tracks:\t\t" + getInt(NUM_TRACKS));
    android.util.Log.i("Vitamio[Metadata]","cap_pause:\t\t" + getBoolean(PAUSE_AVAILABLE));
    android.util.Log.i("Vitamio[Metadata]","cap_seek:\t\t" + getBoolean(SEEK_AVAILABLE));
  }
  return true;
}
